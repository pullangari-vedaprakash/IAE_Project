<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product - Happy Tails Vendor</title>
    <link href="/SHOP/shop-product_form.css" rel="stylesheet">
</head>
<body>
    <button class="back-button" onclick="goBack()">← Back</button>
    
    <div class="main-content">
        <h1 class="page-title">Add New Product</h1>
        
        <form id="product-form" class="form-card" enctype="multipart/form-data">
            <h2 class="section-title">Basic Information</h2>
            <div class="form-section">
                <div class="form-group">
                    <label for="product-name">Product Name*</label>
                    <input type="text" id="product-name" name="product_name" class="form-control" placeholder="Enter product name" required>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="product-category">Category*</label>
                        <select id="product-category" name="product_category" class="form-control" required>
                            <option value="">Select category</option>
                            <% categories.forEach(category => { %>
                                <option value="<%= category %>">
                                    <%= category.charAt(0).toUpperCase() + category.slice(1).replace(/_/g, ' ') %>
                                </option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="product-type">Pet Type*</label>
                        <select id="product-type" name="product_type" class="form-control" required>
                            <option value="">Select pet type</option>
                            <% petTypes.forEach(type => { %>
                                <option value="<%= type %>">
                                    <%= type === 'all' ? 'All Pets' : (type.charAt(0).toUpperCase() + type.slice(1)) %>
                                </option>
                            <% }); %>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label for="stock-status">Stock Status*</label>
                    <select id="stock-status" name="stock_status" class="form-control" required>
                        <option value="In Stock">In Stock</option>
                        <option value="Out of Stock">Out of Stock</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="product-description">Description*</label>
                    <textarea id="product-description" name="product_description" class="form-control" placeholder="Enter product description" required></textarea>
                </div>
            </div>
            
            <div class="form-section">
                <h2 class="section-title">Variants</h2>
                <div id="variants-container"></div>
                <button type="button" id="add-variant" class="button secondary-button">Add Variant</button>
            </div>
            
            <div class="form-section">
                <h2 class="section-title">Images</h2>
                <div class="form-group">
                    <div class="upload-area" id="upload-area">
                        <input type="file" id="product-images" hidden name="product_images" multiple accept="image/*">
                        <div class="upload-icon">+</div>
                        <div class="upload-text">Click to upload product images (max 4)</div>
                    </div>
                    <div id="image-preview" class="image-preview-container"></div>
                </div>
            </div>
            
            <div class="buttons">
                <button type="submit" class="button primary-button">Publish Product</button>
                <div id="submit-status" class="submit-status"></div>
            </div>
        </form>
    </div>

    <script>
        function goBack() { window.history.back(); }
    
        document.addEventListener('DOMContentLoaded', function() {
            const uploadArea = document.getElementById('upload-area');
            const fileInput = document.getElementById('product-images');
            const imagePreview = document.getElementById('image-preview');
            let uploadedFiles = [];
    
            // Handle image uploads
            uploadArea.addEventListener('click', () => fileInput.click());
            fileInput.addEventListener('change', function() {
                const newFiles = Array.from(this.files);
                if (uploadedFiles.length + newFiles.length > 4) {
                    alert('You can upload a maximum of 4 images.');
                    return;
                }
                uploadedFiles = [...uploadedFiles, ...newFiles];
                displayImagePreviews();
            });
    
            function removeImage(index) {
                uploadedFiles.splice(index, 1);
                displayImagePreviews();
            }
    
            function displayImagePreviews() {
                imagePreview.innerHTML = '';
                uploadedFiles.forEach((file, index) => {
                    if (file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = (e) => {
                            const container = document.createElement('div');
                            container.className = 'image-preview-item';
                            const img = document.createElement('img');
                            img.src = e.target.result;
                            img.className = 'preview-image';
                            const deleteBtn = document.createElement('button');
                            deleteBtn.className = 'image-delete-btn';
                            deleteBtn.innerHTML = '×';
                            deleteBtn.type = 'button';
                            deleteBtn.addEventListener('click', () => removeImage(index));
                            container.appendChild(img);
                            container.appendChild(deleteBtn);
                            imagePreview.appendChild(container);
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }
    
            // Handle dynamic variants
            const variantsContainer = document.getElementById('variants-container');
            const addVariantBtn = document.getElementById('add-variant');
    
            function addVariant(size = '', color = '', regularPrice = '', salePrice = '', stockQuantity = '') {
                const variantDiv = document.createElement('div');
                variantDiv.className = 'variant-entry';
                variantDiv.innerHTML = `
                    <div class="form-row">
                        <div class="form-group">
                            <label>Size*</label>
                            <input type="text" name="variants[][size]" class="form-control variant-size" 
                                   value="${size}" placeholder="e.g., Small" required>
                        </div>
                        <div class="form-group">
                            <label>Color</label>
                            <input type="text" name="variants[][color]" class="form-control" 
                                   value="${color}" placeholder="e.g., Brown">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label>Regular Price*</label>
                            <input type="number" name="variants[][regular_price]" class="form-control" 
                                   value="${regularPrice}" placeholder="0.00" step="0.01" min="0" required>
                        </div>
                        <div class="form-group">
                            <label>Sale Price</label>
                            <input type="number" name="variants[][sale_price]" class="form-control" 
                                   value="${salePrice}" placeholder="0.00" step="0.01" min="0">
                        </div>
                        <div class="form-group">
                            <label>Stock Quantity*</label>
                            <input type="number" name="variants[][stock_quantity]" class="form-control" 
                                   value="${stockQuantity}" placeholder="Enter quantity" min="0" required>
                        </div>
                    </div>
                    <button type="button" style="margin-bottom: 30px" class="remove-variant button danger-button">Remove</button>
                `;
                variantsContainer.appendChild(variantDiv);
                variantDiv.querySelector('.remove-variant').addEventListener('click', () => {
                    if (variantsContainer.children.length > 1) {
                        variantDiv.remove();
                    } else {
                        alert('At least one variant is required.');
                    }
                });
            }
    
            addVariantBtn.addEventListener('click', () => addVariant());
            addVariant(); // Start with one variant
    
            // Handle form submission
            const form = document.getElementById('product-form');
            const submitStatus = document.getElementById('submit-status');
    
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
    
                const formData = new FormData();
    
                // Add basic product info
                formData.append('product_name', document.getElementById('product-name').value);
                formData.append('product_category', document.getElementById('product-category').value);
                formData.append('product_type', document.getElementById('product-type').value);
                formData.append('stock_status', document.getElementById('stock-status').value);
                formData.append('product_description', document.getElementById('product-description').value);
    
                // Handle variants
                const variantEntries = document.querySelectorAll('.variant-entry');
                if (variantEntries.length === 0) {
                    submitStatus.innerHTML = 'Please add at least one variant.';
                    submitStatus.className = 'submit-status error';
                    return;
                }
    
                variantEntries.forEach((entry, index) => {
                    formData.append(`variants[${index}][size]`, entry.querySelector('input[name="variants[][size]"]').value);
                    formData.append(`variants[${index}][color]`, entry.querySelector('input[name="variants[][color]"]').value || '');
                    formData.append(`variants[${index}][regular_price]`, entry.querySelector('input[name="variants[][regular_price]"]').value);
                    formData.append(`variants[${index}][sale_price]`, entry.querySelector('input[name="variants[][sale_price]"]').value || '');
                    formData.append(`variants[${index}][stock_quantity]`, entry.querySelector('input[name="variants[][stock_quantity]"]').value);
                });
    
                // Handle images
                uploadedFiles.forEach(file => {
                    formData.append('product_images', file);
                });
    
                // Debug: Log form data
                for (let [key, value] of formData.entries()) {
                    console.log(`${key}: ${value}`);
                }
    
                submitStatus.innerHTML = 'Uploading product...';
                submitStatus.className = 'submit-status loading';
    
                try {
                    const response = await fetch('/submit-product', {
                        method: 'POST',
                        body: formData
                    });
                    const data = await response.json();
                    if (!response.ok) {
                        throw new Error(data.message || 'Submission failed');
                    }
    
                    submitStatus.innerHTML = data.message || 'Product published successfully!';
                    submitStatus.className = 'submit-status success';
                    if (data.redirect) {
                        setTimeout(() => window.location.href = data.redirect, 2000);
                    }
                } catch (error) {
                    console.error('Submission error:', error);
                    submitStatus.innerHTML = `Error: ${error.message}`;
                    submitStatus.className = 'submit-status error';
                }
            });
        });
    </script>
</body>
</html>